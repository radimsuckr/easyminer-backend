"""add_data_source_and_field_models

Revision ID: 14b401bfe2db
Revises: 8701e6c883ef
Create Date: 2025-02-23 14:45:44.589903+01:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "14b401bfe2db"
down_revision: str | None = "8701e6c883ef"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_source",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=True),
        sa.Column("row_count", sa.Integer(), nullable=False),
        sa.Column("size_bytes", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["upload_id"],
            ["upload.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_data_source_id"), "data_source", ["id"], unique=False)
    op.create_table(
        "field",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("data_type", sa.String(length=50), nullable=False),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("unique_values_count", sa.Integer(), nullable=True),
        sa.Column("missing_values_count", sa.Integer(), nullable=True),
        sa.Column("min_value", sa.String(length=255), nullable=True),
        sa.Column("max_value", sa.String(length=255), nullable=True),
        sa.Column("avg_value", sa.Float(), nullable=True),
        sa.Column("std_value", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_source_id"],
            ["data_source.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_field_id"), "field", ["id"], unique=False)
    op.alter_column(
        "user",
        "is_superuser",
        existing_type=mysql.VARCHAR(length=100),
        type_=sa.Boolean(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "is_superuser",
        existing_type=sa.Boolean(),
        type_=mysql.VARCHAR(length=100),
        existing_nullable=False,
    )
    op.drop_index(op.f("ix_field_id"), table_name="field")
    op.drop_table("field")
    op.drop_index(op.f("ix_data_source_id"), table_name="data_source")
    op.drop_table("data_source")
    # ### end Alembic commands ###
