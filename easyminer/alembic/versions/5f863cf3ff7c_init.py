"""init

Revision ID: 5f863cf3ff7c
Revises:
Create Date: 2025-03-29 22:47:09.646995+01:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "5f863cf3ff7c"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "data_source",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("row_count", sa.Integer(), nullable=False),
        sa.Column("size_bytes", sa.Integer(), nullable=False),
        sa.Column("is_finished", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "field_numeric_details",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("min_value", sa.Double(), nullable=False),
        sa.Column("max_value", sa.Double(), nullable=False),
        sa.Column("avg_value", sa.Double(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task_result",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("value", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upload_data_types",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upload_null_value",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("value", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "field",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "data_type", sa.Enum("nominal", "numeric", name="fieldtype"), nullable=False
        ),
        sa.Column("unique_count", sa.Integer(), nullable=False),
        sa.Column("support", sa.Integer(), nullable=False),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_source_id"], ["data_source.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "preview_upload",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.UUID(), nullable=False),
        sa.Column("max_lines", sa.Integer(), nullable=False),
        sa.Column(
            "compression",
            sa.Enum("zip", "gzip", "bzip2", name="compressiontype"),
            nullable=True,
        ),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_source_id"], ["data_source.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("data_source_id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("task_id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "pending",
                "scheduled",
                "started",
                "success",
                "failure",
                name="taskstatusenum",
            ),
            nullable=False,
        ),
        sa.Column("status_message", sa.String(length=255), nullable=True),
        sa.Column("data_source_id", sa.Integer(), nullable=True),
        sa.Column("result_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["data_source_id"], ["data_source.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["result_id"], ["task_result.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_task_id"), "task", ["task_id"], unique=True)
    op.create_table(
        "upload",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("media_type", sa.Enum("csv", name="mediatype"), nullable=False),
        sa.Column("db_type", sa.Enum("limited", name="dbtype"), nullable=False),
        sa.Column("separator", sa.String(length=1), nullable=False),
        sa.Column("encoding", sa.String(length=40), nullable=False),
        sa.Column("quotes_char", sa.String(length=1), nullable=False),
        sa.Column("escape_char", sa.String(length=1), nullable=False),
        sa.Column("locale", sa.String(length=20), nullable=False),
        sa.Column(
            "compression",
            sa.Enum("zip", "gzip", "bzip2", name="compressiontype"),
            nullable=True,
        ),
        sa.Column("preview_max_lines", sa.Integer(), nullable=True),
        sa.Column("data_source_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["data_source_id"], ["data_source.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("data_source_id"),
    )
    op.create_table(
        "chunk",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uploaded_at", sa.DateTime(), nullable=False),
        sa.Column("path", sa.String(length=255), nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["upload_id"], ["upload.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upload_data_type_table",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=True),
        sa.Column("upload_data_type_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["upload_data_type_id"], ["upload_data_types.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["upload_id"], ["upload.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "upload_null_value_table",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=True),
        sa.Column("upload_null_value_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["upload_id"], ["upload.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["upload_null_value_id"], ["upload_null_value.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("upload_null_value_table")
    op.drop_table("upload_data_type_table")
    op.drop_table("chunk")
    op.drop_table("upload")
    op.drop_index(op.f("ix_task_task_id"), table_name="task")
    op.drop_table("task")
    op.drop_table("preview_upload")
    op.drop_table("field")
    op.drop_table("upload_null_value")
    op.drop_table("upload_data_types")
    op.drop_table("task_result")
    op.drop_table("field_numeric_details")
    op.drop_table("data_source")
    # ### end Alembic commands ###
